FROM ubuntu:20.04 AS builder

# Install dependencies
RUN echo "Installing dependencies"; \
  set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    gnupg \
    wget; \
  rm -rf /var/lib/apt/lists/*; \
  apt-get clean;

# Install Gosu
ENV GOSU_VERSION=1.12
RUN echo "Installing gosu $GOSU_VERSION" \
  && set -ux \
	&& dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')" \
	&& wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch" \
	&& wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc" \
  && export GNUPGHOME="$(mktemp -d)" \
	&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \
	&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \
	&& gpgconf --kill all \
	&& rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc \
	&& chmod +x /usr/local/bin/gosu \
	&& gosu --version \
	&& gosu nobody true

# Install Bitcoin-Core
ARG RELEASE_TAG=0.21.0
RUN echo "Installing Bitcoin Core $RELEASE_TAG" \
  && set -ux \
  && cd /tmp \
  && wget https://bitcoincore.org/bin/bitcoin-core-${RELEASE_TAG}/bitcoin-${RELEASE_TAG}-x86_64-linux-gnu.tar.gz \
  && wget https://bitcoincore.org/bin/bitcoin-core-${RELEASE_TAG}/SHA256SUMS.asc \
  && gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys 01EA5486DE18A882D4C2684590C8019E36C2E964 \
  && gpg --verify SHA256SUMS.asc \
  && sha256sum --ignore-missing --check SHA256SUMS.asc \
  && tar -xvf bitcoin-${RELEASE_TAG}-x86_64-linux-gnu.tar.gz \
  && cp bitcoin-${RELEASE_TAG}/bin/bitcoind /usr/local/bin/


FROM ubuntu:20.04

ENV APP_EXE_DIR=/usr/local/bin
ENV APP_DATA_DIR=/node-data
ENV APP_CONFIG_DIR=/node-config
ENV APP_ETC_DIR=/node-etc

# add user and group first to make sure their IDs 
# get assigned consistently and create missing directories
ENV USER_ID=1000
ENV USER_NAME=docker_user
RUN groupadd -r -g $USER_ID $USER_NAME \
  && useradd -r -g $USER_NAME -u $USER_ID -d $APP_DATA_DIR -s /bin/bash -M $USER_NAME \
  && mkdir -p $APP_DATA_DIR $APP_CONFIG_DIR $APP_ETC_DIR

COPY --from=builder /usr/local/bin/gosu $APP_EXE_DIR/
COPY --from=builder /usr/local/bin/bitcoind $APP_EXE_DIR/
COPY entrypoint.sh $APP_EXE_DIR/
RUN chmod -R 755 $APP_EXE_DIR

WORKDIR $APP_DATA_DIR

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]